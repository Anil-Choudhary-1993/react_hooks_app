{"version":3,"sources":["Navbar.js","CrudApp/Context.js","CrudApp/types.js","CrudApp/actions.js","CrudApp/form.js","CrudApp/table.js","CrudApp/reducer.js","CrudApp/index.js","Autocomplete/index.js","SearchListApp/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","path","window","location","pathname","useRouteMatch","className","to","Context","React","createContext","ADD_USER","EDIT_USER","DELETE_USER","addUser","user","type","payload","Form","useContext","context","state","dispatch","useState","name","setName","userName","setUserName","useEffect","value","onChange","e","target","onClick","id","Table","users","length","map","result","index","userId","userReducer","action","val","find","filter","CrudApp","useReducer","Provider","suggestions","Autocomplete","suggRef","useRef","showSuggestion","filteredSuggestions","input","currentSuggestionIndex","setState","selectWord","innerText","trim","v","toLowerCase","indexOf","onKeyDown","keyCode","current","scrollTop","scrollHeight","ref","sug","InitailPath","SeacrhList","search","setSearch","query","setQuery","data","setData","loading","setLoading","error","setError","fetchData","useCallback","a","fetch","json","hits","console","log","JSON","stringify","author","title","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2a9d741.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport './navbar.css'\r\n\r\nexport default function Navbar() {\r\n  let path = window.location.pathname;\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul>\r\n        <li className={path == \"/\" ? 'active' : ''}><Link to=\"/\">Autocomplete app</Link></li>\r\n        <li className={path == \"/crud\" ? 'active' : ''}><Link to=\"/crud\">Crud app</Link></li>\r\n        <li className={path == \"/search\" ? 'active' : ''}><Link to=\"/search\">SearchList app</Link></li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}","import React from 'react';\r\nconst Context = React.createContext();\r\nexport default Context;\r\n","export const ADD_USER = 'ADD_USER';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';","import {\r\n  ADD_USER,\r\n  EDIT_USER,\r\n  DELETE_USER\r\n} from './types';\r\n\r\nexport const addUser = (user) => ({\r\n  type: ADD_USER,\r\n  payload: user\r\n});\r\n\r\nexport const editUser = (userId) => ({\r\n  type: EDIT_USER,\r\n  payload: userId\r\n});\r\n\r\nexport const deleteUser = (userId) => ({\r\n  type: DELETE_USER,\r\n  payload: userId\r\n});","import React from 'react'\r\nimport context from './Context';\r\nimport { addUser } from './actions';\r\n\r\nfunction Form() {\r\n  let { state, dispatch } = React.useContext(context);\r\n  let [name, setName] = React.useState(state.user.name);\r\n  let [userName, setUserName] = React.useState(state.user.userName);\r\n\r\n  React.useEffect(() => {\r\n    if (state.user.name) setName(state.user.name);\r\n    if (state.user.userName) setUserName(state.user.userName);\r\n  }, [state.user])\r\n\r\n  const saveUser = () => {\r\n    setUserName('');\r\n    setName('');\r\n    if (state.user.id) {\r\n      dispatch(addUser({\r\n        ...state.user,\r\n        name: name,\r\n        userName: userName\r\n      }))\r\n    } else {\r\n      dispatch(addUser({\r\n        name: name,\r\n        userName: userName\r\n      }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>Add User</h1>\r\n      <div className=\"input-group\">\r\n        <span className=\"input-group-title\">Name</span>\r\n        <input className=\"input-group-field\" type=\"text\" value={name} onChange={e => setName(e.target.value)} />\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <span className=\"input-group-title\">User-Name</span>\r\n        <input className=\"input-group-field\" type=\"text\" value={userName} onChange={e => setUserName(e.target.value)} />\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <button className=\"button\" onClick={saveUser}>Add User</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport context from './Context';\r\nimport { editUser, deleteUser } from './actions';\r\n\r\nfunction Table() {\r\n  let { state, dispatch } = React.useContext(context);\r\n  return (\r\n    <div className=\"table\">\r\n      <h1>View Users</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>User-Name</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.users?.length > 0 && state.users.map((result, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  {result.name}\r\n                </td>\r\n                <td>\r\n                  {result.userName}\r\n                </td>\r\n                <td>\r\n                  <button onClick={() => dispatch(editUser(result.id))}>Edit</button>\r\n                  <button onClick={() => dispatch(deleteUser(result.id))}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table","import {\r\n  ADD_USER,\r\n  EDIT_USER,\r\n  DELETE_USER\r\n} from './types';\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n      if (action.payload.id) {\r\n        return {\r\n          ...state,\r\n          users: state.users.map(val => val.id === action.payload.id ? action.payload : val),\r\n          user: {\r\n            id: '',\r\n            name: '',\r\n            userName: ''\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          users: [\r\n            ...state.users,\r\n            {\r\n              id: state.users.length + 1,\r\n              ...action.payload\r\n            }\r\n          ],\r\n          user: {\r\n            id: '',\r\n            name: '',\r\n            userName: ''\r\n          }\r\n        }\r\n      };\r\n    case EDIT_USER:\r\n      return {\r\n        ...state,\r\n        user: state.users.find(val => val.id === action.payload) || { name: '', userName: '' }\r\n      }\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(val => val.id !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;","import React from 'react'\r\nimport Form from './form';\r\nimport Table from './table';\r\nimport './index.css';\r\nimport Context from './Context';\r\nimport userReducer from './reducer';\r\n\r\nfunction CrudApp() {\r\n  const [state, dispatch] = React.useReducer(userReducer, {\r\n    users: [],\r\n    user: {\r\n      id: '',\r\n      name: '',\r\n      userName: ''\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Context.Provider value={{ state, dispatch }}>\r\n      <div className=\"crud_app\">\r\n        <h1>Crud App With Hooks</h1>\r\n\r\n        <div className=\"wrapper\">\r\n          <Form />\r\n          <Table />\r\n        </div>\r\n      </div>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default CrudApp;","import React from 'react';\r\nimport './index.css';\r\n\r\nconst suggestions = [\r\n  \"Mango\",\r\n  \"Grapes\",\r\n  \"Musk\",\r\n  \"Banana\",\r\n  \"grapes\",\r\n  \"lime\",\r\n  \"lemon\",\r\n  \"cherry\",\r\n  \"blueberry\",\r\n  \"apple\",\r\n  \"watermelon\"\r\n];\r\n\r\nexport default function Autocomplete() {\r\n  let suggRef = React.useRef();\r\n  let [state, setState] = React.useState({\r\n    showSuggestion: false,\r\n    filteredSuggestions: [],\r\n    input: '',\r\n    currentSuggestionIndex: 0\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    let input = e.target.value.trim(),\r\n      showSuggestion = false,\r\n      filteredSuggestions = [],\r\n      currentSuggestionIndex = 0;\r\n    if (input) {\r\n      filteredSuggestions = suggestions.filter(v => v.toLowerCase().indexOf(input.toLowerCase()) > -1);\r\n      showSuggestion = true;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      showSuggestion,\r\n      input,\r\n      filteredSuggestions,\r\n      currentSuggestionIndex\r\n    })\r\n  }\r\n\r\n  const selectWord = (e) => {\r\n    setState({\r\n      input: e.target.innerText,\r\n      showSuggestion: false,\r\n      filteredSuggestions: [],\r\n      currentSuggestionIndex: 0\r\n    })\r\n  }\r\n\r\n  const onkeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      setState({\r\n        input: state.filteredSuggestions[state.currentSuggestionIndex],\r\n        showSuggestion: false,\r\n        filteredSuggestions: [],\r\n        currentSuggestionIndex: 0\r\n      })\r\n    } else if (e.keyCode === 38) {\r\n      let currentSuggestionIndex = state.currentSuggestionIndex;\r\n      if (currentSuggestionIndex > 0) {\r\n        currentSuggestionIndex--;\r\n      }\r\n      if (currentSuggestionIndex === 0) {\r\n        suggRef.current.scrollTop = 0;\r\n      } else {\r\n        suggRef.current.scrollTop -= 20;\r\n      }\r\n      setState({\r\n        ...state,\r\n        currentSuggestionIndex\r\n      })\r\n    } else if (e.keyCode === 40) {\r\n      let currentSuggestionIndex = state.currentSuggestionIndex;\r\n      if (currentSuggestionIndex < state.filteredSuggestions.length - 1) {\r\n        currentSuggestionIndex++;\r\n      }\r\n      if (currentSuggestionIndex === state.filteredSuggestions.length - 1) {\r\n        suggRef.current.scrollTop = suggRef.current.scrollHeight;\r\n      } else {\r\n        suggRef.current.scrollTop += 20\r\n      }\r\n      setState({\r\n        ...state,\r\n        currentSuggestionIndex\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>\r\n        React Autocomplete Demo\r\n        Start typing and experience the autocomplete wizardry!\r\n      </h1>\r\n      <div className=\"container\">\r\n        <div className=\"input_field\">\r\n          <input\r\n            type=\"text\"\r\n            value={state.input}\r\n            onChange={handleChange}\r\n            onKeyDown={onkeyDown}\r\n          />\r\n        </div>\r\n\r\n        {state.showSuggestion && <div className=\"suggestions\" ref={suggRef}>\r\n          <ul>\r\n            {\r\n              state.filteredSuggestions.map((sug, index) => <li\r\n                key={index}\r\n                onClick={selectWord}\r\n                className={state.currentSuggestionIndex === index ? 'highlight' : ''}\r\n              >\r\n                {sug}\r\n              </li>)\r\n            }\r\n          </ul>\r\n        </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nconst InitailPath = 'https://hn.algolia.com/api/v1/search';\r\n\r\nfunction SeacrhList() {\r\n  let [search, setSearch] = React.useState('');\r\n  let [query, setQuery] = React.useState(InitailPath)\r\n  let [data, setData] = React.useState([]);\r\n  let [loading, setLoading] = React.useState(false);\r\n  let [error, setError] = React.useState('');\r\n\r\n  const fetchData = React.useCallback(async () => {\r\n    setLoading(true);\r\n    setData([]);\r\n    setError('');\r\n    try {\r\n      let result = await fetch(query);\r\n      result = await result.json();\r\n      setData(result.hits);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(JSON.stringify(err));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [query])\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className=\"search_container\">\r\n      <div className=\"input_group\">\r\n        <input type=\"text\" value={search} onChange={e => setSearch(e.target.value)} />\r\n        <button onClick={() => setQuery(`${InitailPath}?query=${search}`)}>Search</button>\r\n      </div>\r\n      <div className=\"content\">\r\n        {error && <h1>{error}</h1>}\r\n        {loading && <h3>Loading...</h3>}\r\n        {\r\n          data?.length > 0 && <ul>\r\n            {data.map((result, index) => (<li key={index}>\r\n              <b>{result.author}</b>\r\n              <i>{result.title}</i>\r\n            </li>\r\n            ))\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SeacrhList;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './Navbar';\nimport CrudApp from './CrudApp';\nimport Autocomplete from './Autocomplete';\nimport SeacrhList from './SearchListApp';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/crud\" component={CrudApp} />\n        <Route exact path=\"/search\" component={SeacrhList} />\n        <Route exact path=\"/\" component={Autocomplete} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}